image:
  repository: ghcr.io/luna-sites/lunasites-backend
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

timezone: Europe/Copenhagen

links:
  database: plone-postgres-postgres.luna-system
  memcached: plone-postgres-memcached.luna-system

ingress:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  certificate: key-luna-sites-letsencrypt
  tls: true

plone:
  serviceType: ClusterIP
  hostname: plone.luna-sites.com
  site: luna
  googleUrl: ""
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 6
    # targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 60
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 256Mi
  database:
    POSTGRES_DB: plone
    POSTGRES_USER: plone
    POSTGRES_PASSWORD: plone
  environment:
    GRAYLOG: "-"
    SENTRY_DSN: ""
    SENTRY_ENVIRONMENT: "01dev"
    CORS_ALLOW_ORIGIN: ""
    DEFAULT_PUBLISHER: ""
    DEFAULT_ORGANISATIONS: ""
    STATIC_BANNER_ENABLED_luna: ""
    DYNAMIC_BANNER_ENABLED: ""
  annotations: {}
  livenessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 20
    timeoutSeconds: 10
    initialDelaySeconds: 30
    failureThreshold: 6
    successThreshold: 1
  startupProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 5
    timeoutSeconds: 10
    initialDelaySeconds: 10
    failureThreshold: 12
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 15
    timeoutSeconds: 10
    initialDelaySeconds: 60
    failureThreshold: 4
    successThreshold: 2

varnish:
  serviceType: ClusterIP
  serviceName: backend-varnish
  backend: "backend-plone"
  port: 8080
  resources:
    limits:
      memory: 256Mi
    requests:
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  environment:
    VARNISH_SIZE: 128M
    VARNISH_DNS_TTL: "20s"
    VARNISH_BERESP_TTL: "60s"
    VARNISH_BERESP_GRACE: "120s"
    VARNISH_BERESP_KEEP: "120s"
    VARNISH_GZIP_ENABLED: "false"
    VARNISH_GZIP_JSON_ENABLED: "false"
    AUTOKILL_CRON: ""
  livenessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 10
    timeoutSeconds: 10
    initialDelaySeconds: 30
    failureThreshold: 5
    successThreshold: 1
  startupProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 5
    timeoutSeconds: 10
    initialDelaySeconds: 10
    failureThreshold: 12
    successThreshold: 1

zodbpack:
  enabled: false
  schedule: "0 0 3 * *"
  keepSuccessfulPods: 3
  keepFailedPods: 5
  resources:
    limits:
      memory: 256Mi
    requests:
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
