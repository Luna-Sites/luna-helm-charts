image:
  repository: ghcr.io/luna-sites/lunasites-backend
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

timezone: Europe/Copenhagen

links:
  database: postgres-postgres.user-6xwms
  memcached: postgress-memcached.user-6xwms

ingress:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  certificate: key-luna-sites-letsencrypt
  tls: true

plone:
  serviceType: ClusterIP
  hostname: plone.luna-sites.com
  site: luna
  googleUrl: g
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 6
    # targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 60
  replicaCount: 1
  resources:
  database:
    POSTGRES_DB: plone
    POSTGRES_USER: plone
    POSTGRES_PASSWORD: plone
  environment:
    GRAYLOG: "logcentral.luna-sites.com:12201"
    SENTRY_DSN: ""
    SENTRY_ENVIRONMENT: "01dev"
    CORS_ALLOW_ORIGIN: ""
    DEFAULT_PUBLISHER: ""
    DEFAULT_ORGANISATIONS: ""
    STATIC_BANNER_ENABLED_luna: ""
    DYNAMIC_BANNER_ENABLED: ""
  annotations: {}
  livenessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 20
    timeoutSeconds: 10
    initialDelaySeconds: 30
    failureThreshold: 6
    successThreshold: 1
  startupProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 5
    timeoutSeconds: 10
    initialDelaySeconds: 10
    failureThreshold: 12
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 15
    timeoutSeconds: 10
    initialDelaySeconds: 60
    failureThreshold: 4
    successThreshold: 2

debug:
  serviceType: ClusterIP
  enabled: false
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  environment: {}

entrasync:
  enabled: false
  schedule: "0 0 3 * *"
  keepSuccessfulPods: 3
  keepFailedPods: 5
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

zodbpack:
  enabled: false
  schedule: "0 0 3 * *"
  keepSuccessfulPods: 3
  keepFailedPods: 5
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

postfix:
  fullnameOverride: ""
  dryrun: false
  serverName: plone.luna-sites.com
  mtpPass: ""
  mtpPort: ""
  mtpRelay: ""
  mtpUser: ""
  serviceName: "postfix"
  mailtrap:
    httpenabled: false
    serviceType: NodePort
    ingress:
      enabled: false
      hostname: mailtrap.luna-sites.com
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      certificate: mailtrap.luna-sites.com-tls
